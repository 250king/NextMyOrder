generator client {
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  provider      = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  qq       String   @unique
  email    String?  @unique
  phone    String?
  address  String?
  createAt DateTime @default(now())

  joined Join[]
  orders Order[]
}

model Group {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  qq       String   @unique
  status   String   @default("activated")
  createAt DateTime @default(now())

  users Join[]
  items Item[]
}

model Join {
  userId   Int
  groupId  Int
  createAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@id([userId, groupId])
}

model Item {
  id      Int     @id @default(autoincrement())
  groupId Int
  name    String  @unique
  url     String
  price   Float
  weight  Float?
  allowed Boolean @default(false)

  group  Group   @relation(fields: [groupId], references: [id], onDelete: Cascade)
  orders Order[]
}

model Order {
  id         Int      @id @default(autoincrement())
  userId     Int
  itemId     Int
  deliveryId Int?
  count      Int      @default(1)
  status     String   @default("pending")
  createAt   DateTime @default(now())
  comment    String?

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  item     Item      @relation(fields: [itemId], references: [id], onDelete: Cascade)
  delivery Delivery? @relation(fields: [deliveryId], references: [id], onDelete: SetNull)
}

model Delivery {
  id            Int      @id @default(autoincrement())
  name          String
  phone         String
  method        String
  address       String
  status        String   @default("pending")
  createAt      DateTime @default(now())
  comment       String?
  taskId        String?  @unique
  expressId     String?
  expressNumber String?
  token         String?

  orders Order[]
}

model Setting {
  key   String @unique
  value String
}
